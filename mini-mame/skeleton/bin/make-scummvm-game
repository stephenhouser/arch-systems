#!/usr/bin/env python3
# ScummVM .ini game file creator.
#
# Takes a ScummVM game name (ex freddi2), extracts that game from the
# global ~/.config/scummvm/scummvm.ini configuration along with the
# general ScummVM configuration information, and saves it to a "save" file
# in ~/.local/share/scummvm/GAME.ini
#
# This ~/.local version is what should be used to launch the game with ScummVM
#
# Ex: scummvm -c ~/.local/share/scummvm/freddi2.ini
#
# ScummVM saves game state in the .ini file that was used to launch the game
# By creating a .ini under .local we can save individual game states
# separate from the configuration file. That's what this facilitates
#
import configparser
import os
import sys

CONFIG = os.path.expanduser("~/.config/scummvm/scummvm.ini")
LOCAL  = os.path.expanduser("~/.local/share/scummvm")

if len(sys.argv) != 2:
    print("ERROR: Requires a game name")
    sys.exit()
                      
config = configparser.ConfigParser()
config.read(CONFIG)

game=sys.argv[1]
if game not in config:
    print(f"ERROR: Game not present in {CONFIG}")
    sys.exit()

local = configparser.ConfigParser()
local['scummvm'] = config['scummvm']

local[game] = config[game]

save_file_name = os.path.join(LOCAL, game + ".ini")
with open(save_file_name, 'w') as configfile:
    local.write(configfile)
